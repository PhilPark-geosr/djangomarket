"""
Django settings for djangomarket project.

Generated by 'django-admin startproject' using Django 3.0.14.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# reverse url 관련
from django.urls import reverse_lazy
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'e1$5tvoet$-v3uae@1m1b0%s@#65iy+pofrj6ih32miw2%t83u'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # third apps
    'django_extensions',
    'debug_toolbar',
    "bootstrap4", # UI 관련 라이브러리
    "rest_framework", # DRF
    'drf_yasg', # DRF swagger
    'corsheaders', #cors
    
    # local apps
    'blog1',
    'instagram',
    'market',
    'accounts', # 계정관련 
    'ai', # for ai inference api
    'drf', # DRF
    # 'mongo', # for mongdb
]

MIDDLEWARE = [
    # debug toolbar 관련
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    # CORS
    'corsheaders.middleware.CorsMiddleware',

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware', ##CSRF 공격 방지
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    
]

ROOT_URLCONF = 'djangomarket.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            # 특정 앱에 속하지 않은 경우,  파일 시스템에서 찾아서 응답해주는 템플릿 경로 지정
            os.path.join(BASE_DIR, 'djangomarket', 'templates')

        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth', ## 이미 template 엔진에 context로 user가 넘어간다 
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangomarket.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# for mongo db
# DATABASES = {
#     'default': {
#         'ENGINE': 'djongo',
        
#         'NAME': 'bezkoder_db',
#         'HOST': '127.0.0.1',
#         'PORT': 27017,
#     }
# }


# for mongo local
# DATABASES = {
#     'default': {
#         'ENGINE': 'djongo',
#         'NAME': 'django_test2',
#         'HOST': '127.0.0.1',
#         'PORT': 27017,
#     }
# }
# for mongo Atlas
# DATABASES = {
#     'default': {
#         'ENGINE': 'djongo',
#         'CLINET' : {
#             "name" : "",
#             "host" : "",
#             "username" : "",
#             "password" : "",
#             # "authMechanism" : "SCRAM-SHA-1",
#         }
        
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
#로그인 로그아웃 관련 설정
LOGOUT_REDIRECT_URL = reverse_lazy('login')

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/


STATIC_URL = '/static/'

# media file다룰때
MEDIA_URL = '/media/' #URL로 파일에 대해 접근할 때
MEDIA_ROOT = os.path.join(BASE_DIR, 'media') #파일을 저장하는 경로

INTERNAL_IPS = [
    # ...
    "127.0.0.1", #debug toolbar에 접근할 수 있는 url
    # ...
]

# 유저 모델 임포트 꼭 앱시작시 먼저 정의해주고 시작해야 함!
AUTH_USER_MODEL = "auth.User"


# erd 추출용
GRAPH_MODELS = {
#   'all_applications': True,
  'app_labels': ["ai", "auth", "drf"],
  'group_models': True,
}

# for CORS
CORS_ORIGIN_ALLOW_ALL = True

# CORS_ORIGIN_ALLOW_ALL = False
# CORS_ORIGIN_WHITELIST = (
#     'http://localhost:8081',
# )

# Rest FrameWork
REST_FRAMEWORK = {
    # paging 처리
    'PAGE_SIZE': 5,
    'DEFAULT_PAGINATION_CLASS':	'rest_framework.pagination.PageNumberPagination',
    # 디폴트 인증 지정
    'DEFAULT_PERMISSION_CLASSES': [

    # 누구든지 접근 허용
    #'rest_framework.permissions.AllowAny',
    
    # 인증된 사용자만 접근 허용
    'rest_framework.permissions.IsAuthenticated',
    
    # 호출횟수 지정
    
    ],
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.UserRateThrottle',
    ],
    'DEFAULT_THROTTLE_RATES': {
        'user': '2/day',
    },

}
# CaChing
CACHES = {  
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1", # 1번 DB
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

# django-shell_plus 사용할때의 설정
os.environ["DJANGO_ALLOW_ASYNC_UNSAFE"] = 'true'